name: test-library-on-nightly
description: Tests a library on a nightly
inputs:
  library-npm-package:
    description: The library npm package to add
    required: true
  platform:
    description: whether we want to build for iOS or Android
    required: true
runs:
  using: composite
  steps:
    - name: Create new app
      shell: bash
      run: |
        cd /tmp
        npx @react-native-community/cli init RNApp --skip-install --version nightly
    - name: Add library
      shell: bash
      run: |
        cd /tmp/RNApp
        yarn add ${{ inputs.library-npm-package }}
    - name: Update App.tsx
      shell: bash
      run: |
        cd /tmp/RNApp
        cat > App.tsx << 'EOF'
        import React, { useEffect } from 'react';
        import { View, Text } from 'react-native';

        const App = () => {
          useEffect(() => {
            console.log('LOADED_OK');
          }, []);

          return (
            <View>
              <Text>App loaded successfully</Text>
            </View>
          );
        };

        export default App;
        EOF
    # iOS
    - name: Setup xcode
      if: ${{ inputs.platform == 'ios' }}
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Build iOS
      shell: bash
      if: ${{ inputs.platform == 'ios' }}
      run: |
        cd /tmp/RNApp/ios
        bundle install
        RCT_USE_RN_DEP=1 RCT_USE_PREBUILT_RNCORE=1 bundle exec pod install
        xcodebuild build \
          -workspace RNApp.xcworkspace \
          -scheme RNApp \
          -sdk iphonesimulator

    # Android
    - name: Setup Java for Android
      if: ${{ inputs.platform == 'android' }}
      uses: actions/setup-java@v2
      with:
        java-version: "17"
        distribution: "zulu"
    - name: AVD cache
      if: ${{ inputs.platform == 'android' }}
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-35-arm64-x86_64
    - name: Enable KVM group perms
      if: ${{ inputs.platform == 'android' }}
      shell: bash
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        ls /dev/kvm

    - name: Create AVD and generate snapshot for caching
      if: ${{ inputs.platform == 'android' }} && steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
      with:
        api-level: 35
        arch: x86_64
        ram-size: 4096M
        profile: pixel
        avd-name: Pixel_3a_API_30_AOSP
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        emulator-boot-timeout: 12000
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."

    - name: Build Android
      if: ${{ inputs.platform == 'android' }}
      uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
      with:
        working-directory: /tmp/RNApp/android
        api-level: 35
        arch: x86_64
        profile: pixel
        avd-name: Pixel_3a_API_30_AOSP
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        emulator-boot-timeout: 12000
        disable-animations: false
        script: |
          ./gradlew installDebug
          adb shell am start -n com.rnapp/.MainActivity
          echo "Waiting for app to load..."
          sleep 10
          if ! adb logcat -e "LOADED_OK" -d | grep "LOADED_OK"; then
            echo "❌ 'LOADED_OK' not found in logs"
            exit 1
          fi
          echo "✅ App loaded successfully"
